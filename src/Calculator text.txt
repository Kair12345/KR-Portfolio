Button[] numButtons = new Button[10]; //<>//
Button[] opButtons = new Button[11];

String dVal = "0";
String op; // Store the user selected operator
boolean left = true; // Controls the memory numeric operations
// All numbers for calculations
float r = 0.0;
float l = 0.0;
float result = 0.0;


//for(int i=0;i<opButtons.length; i++)A {
//if(opButtons[i].val.equals("C')){
//reset variables
//dVal = "0";

void setup() {
  size(1000, 1000);
  numButtons[0] = new Button(100, 500, 100, 100, "0");
  numButtons[1] = new Button(100, 200, 100, 100, "1");
  numButtons[2] = new Button(100, 300, 100, 100, "2");
  numButtons[3] = new Button(100, 400, 100, 100, "3");
  numButtons[4] = new Button(200, 200, 100, 100, "4");
  numButtons[5] = new Button(200, 300, 100, 100, "5");
  numButtons[6] = new Button(200, 400, 100, 100, "6");
  numButtons[7] = new Button(300, 200, 100, 100, "7");
  numButtons[8] = new Button(300, 300, 100, 100, "8");
  numButtons[9] = new Button(300, 400, 100, 100, "9");
  opButtons[0] = new Button(200, 500, 200, 100, "=");
  opButtons[1] = new Button(400, 200, 200, 100, "C");
  opButtons[2] = new Button(400, 500, 66.67, 100, ".");
  opButtons[3] = new Button(466.67, 500, 66.67, 100, "+");
  opButtons[4] = new Button(533.33, 500, 66.67, 100, "-");

  opButtons[5] = new Button(400, 400, 66.67, 100, "%");
  opButtons[6] = new Button(466.67, 400, 66.67, 100, "*");
  opButtons[7] = new Button(533.33, 400, 66.67, 100, "/");

  opButtons[8] = new Button(400, 300, 66.67, 100, "±");
  opButtons[9] = new Button(466.67, 300, 66.67, 100, "tan");
  opButtons[10] = new Button(533.33, 300, 66.67, 100, "π");
}
void draw() {
  background(250);
  updateDisplay();
  for (int i=0; i<numButtons.length; i++) {
    numButtons[i].display();
    numButtons[i].hover(mouseX, mouseY);
  }
  for (int i=0; i<opButtons.length; i++) {
    opButtons[i].display();
    opButtons[i].hover(mouseX, mouseY);
  }
}


void mousePressed() {
  for (int i=0; i<numButtons.length; i++) {
    if (numButtons[i].on && dVal.length()<37) {
      handleEvent(numButtons[i].val, true);
    }
  }
  for (int i = 0; i <opButtons.length; i++) {
    if (opButtons[i].on) {
      handleEvent(opButtons[i].val, false);
    }
  }
  println("L:" + l + " Op:" + op + " R:" + r + " Result:" + result + " Left:" + left);
}
void updateDisplay() {
  fill(255, 255, 0);
  rect(60, 60, 585, 585);
  fill(255, 255, 180);
  rect(100, 100, 500, 100);
  fill(0);
  if (dVal.length()<18) {
    textSize(55);
  } else if (dVal.length()<20) {
    textSize(50);
  } else if (dVal.length()<22) {
    textSize(45);
  } else if (dVal.length()<25) {
    textSize(40);
  } else if (dVal.length()<28) {
    textSize(35);
  } else if (dVal.length()<32) {
    textSize(30);
  } else if (dVal.length()<38) {
    textSize(25);
  } else {
    textSize(20);
  }

  text(dVal, width-420, 190);
  textAlign(RIGHT);
  textSize(40);
  //if (val.equals("+")) {
  //textAlign(CENTER);
  //}
}
void performCalc() {
  if (op.equals("+")) {
    result = l+r;
  } else if (op.equals("-")) {
    result = l-r;
  } else if (op.equals("*")) {
    result = l*r;
  } else if (op.equals("/")) {
    result = l/r;
  }
  dVal = str(result);
  l = result;
  left = true;
}

void handleEvent(String val, boolean num) {
  if (num) {
    // handle all logic relating to numbers
    if (dVal.equals("0")) {
      dVal = val;
      if (left) {
        l = float(dVal);
      } else if (!left) {
        r = float(dVal);
      }
    } else if (dVal.length()<37) {
      dVal = dVal + val;
      if (left) {
        l = float(dVal);
      } else if (!left) {
        r = float(dVal);
      }
    }
  } else if (val.equals("C")) {
    if (val.equals("C")) {
      //   reset all variables to their default
      dVal = "0";
      left = true;
      op = "";
      r = 0.0;
      l = 0.0;
      result = 0.0;
    }
  } else if (val.equals("=")) {
    performCalc();
  } else if (val.equals("+")) {
    dVal = "0";
    op = "+";
    left = false;
  } else if (val.equals("-")) {
    dVal = "0";
    op = "-";
    left = false;
  } else if (val.equals("*")) {
    dVal = "0";
    op = "*";
    left = false;
  } else if (val.equals("/")) {
    dVal = "0";
    op = "/";
    left = false;
  } else if (val.equals("±")) {
    if (left) {
      l*=-1;
  } //else if (val.equals(".")) {
  //  if (!dVal.contains(".") || dVal.contains(".0")) {
  //    dVal = dVal + ".";
  //    }

    if (left) {
      dVal = str(l);
    } else if (!left) {
      r*=-1;
      dVal = str(r);
    }
  }
}
void keyPressed() {
  println("key:" + key);
  println("keyCode:" + keyCode);
  if (keyPressed) {
    if (keyCode == 49 || keyCode == 97) {
      // handle the event for 1
      handleEvent("1", true);
    } else if (keyCode == 49 || keyCode == 98) {
      // handle the event for 2
      handleEvent("2", true);
    } else if (keyCode == 50 || keyCode == 99) {
      // handle the event for 2
      handleEvent("3", true);
    } else if (keyCode == 51 || keyCode == 100) {
      // handle the event for 2
      handleEvent("4", true);
    } else if (keyCode == 52 || keyCode == 101) {
      // handle the event for 2
      handleEvent("5", true);
    } else if (keyCode == 53 || keyCode == 102) {
      // handle the event for 2
      handleEvent("6", true);
    } else if (keyCode == 54 || keyCode == 103) {
      // handle the event for 2
      handleEvent("7", true);
    } else if (keyCode == 55 || keyCode == 104) {
      // handle the event for 2
      handleEvent("8", true);
    } else if (keyCode == 56 || keyCode == 105) {
      // handle the event for 2
      handleEvent("9", true);
    } else if (keyCode == 61 || keyCode == 10) {
      handleEvent("=", false);
    } else if (keyCode == 109) {
      handleEvent("-", false);
    } else if (keyCode == 106) {
      handleEvent("*", false);
    } else if (keyCode == 111) {
      handleEvent("/", false);
    } else if (keyCode == 107) {
      handleEvent("+", false);
    } else if (keyCode == 10) {
      // handle the event for 2
      handleEvent("C", true);
    }
  }
}

class Button {
  // Member Variables
  float x, y, w, h;
  boolean on;
  String val;

  // Constructor
  Button(float tempX, float tempY, float tempW, float tempH, String tempVal) {
    x  = tempX;
    y  = tempY;
    w  = tempW;
    h  = tempH;
    val= tempVal;
    on = false;  // Button always starts as off
  }

  // Display Method
  void display() {
    if(on) {
      fill(255,0,255);
    } else {
      fill(250,255,0);
    }
    rect(x, y, w, h, 5);
    fill(0);
    //textSize(2);
    text(val,x+45,y+55);
  }

  // Rollover Method
  void hover(int mx, int my) {
    on = (mx>x && mx<x+w && my>y && my<y+h);
  }
}
